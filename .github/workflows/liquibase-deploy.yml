name: Liquibase Database Migration

on:
  push:
    branches:
      - main
    paths:
      - 'changelog/**'
  pull_request:
    branches:
      - main
    paths:
      - 'changelog/**'
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  ALLOYDB_DATABASE: ${{ secrets.ALLOYDB_DATABASE }}

jobs:
  liquibase-deploy:
    name: Deploy Database Changes
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install AlloyDB Auth Proxy
        run: |
          echo "Downloading AlloyDB Auth Proxy..."
          curl -o alloydb-auth-proxy https://storage.googleapis.com/alloydb-auth-proxy/v1.13.4/alloydb-auth-proxy.linux.amd64
          chmod +x alloydb-auth-proxy
          ./alloydb-auth-proxy --version

      - name: Start AlloyDB Auth Proxy
        run: |
          echo "Starting AlloyDB Auth Proxy..."
          echo "Instance URI: ${{ secrets.ALLOYDB_INSTANCE_URI }}"
          
          # Start proxy in background (removed --private-ip flag)
          ./alloydb-auth-proxy "${{ secrets.ALLOYDB_INSTANCE_URI }}" \
            --port=5432 \
            --debug-logs \
            > proxy.log 2>&1 &
          
          # Store PID for cleanup
          echo $! > proxy.pid
          
          echo "Waiting for proxy to start..."
          sleep 15
          
          # Check if proxy is running
          if ps -p $(cat proxy.pid) > /dev/null; then
            echo "Proxy is running with PID: $(cat proxy.pid)"
          else
            echo "Proxy failed to start. Log contents:"
            cat proxy.log
            exit 1
          fi
          
          # Test connection to proxy
          echo "Testing proxy connectivity..."
          timeout 60 bash -c 'while ! nc -z localhost 5432; do sleep 2; done' || {
            echo "Proxy port 5432 not accessible after 60s. Log contents:"
            cat proxy.log
            ps aux | grep alloydb-auth-proxy || echo "No proxy processes found"
            exit 1
          }
          
          echo "AlloyDB Auth Proxy is ready!"

      - name: Set up Liquibase
        uses: liquibase/setup-liquibase@v1
        with:
          version: '4.33.0'
          edition: 'oss'

      - name: Test Database Connection
        run: |
          echo "Testing database connection..."
          export PGCONNECT_TIMEOUT=30
          export PGPASSWORD="SecurePassword123!"
          
          # Install psql
          sudo apt-get update && sudo apt-get install -y postgresql-client
          
          echo "Testing psql connection..."
          timeout 30 psql -h localhost -p 5432 -U postgres -d ${{ env.ALLOYDB_DATABASE }} -c "SELECT version();" || {
            echo "psql connection failed. Proxy logs:"
            cat proxy.log
            exit 1
          }

      - name: Run Liquibase Migration
        run: |
          echo "Running Liquibase migration..."
          
          # Set connection parameters
          export LIQUIBASE_COMMAND_URL="jdbc:postgresql://localhost:5432/${{ env.ALLOYDB_DATABASE }}"
          export LIQUIBASE_COMMAND_USERNAME="postgres"
          export LIQUIBASE_COMMAND_PASSWORD="SecurePassword123!"
          
          echo "Running Liquibase status..."
          liquibase status --verbose
          
          echo "Running Liquibase update..."
          liquibase update
          
          echo "Migration completed successfully!"

      - name: Post-deployment History
        if: success()
        run: |
          export LIQUIBASE_COMMAND_URL="jdbc:postgresql://localhost:5432/${{ env.ALLOYDB_DATABASE }}"
          export LIQUIBASE_COMMAND_USERNAME="postgres"
          export LIQUIBASE_COMMAND_PASSWORD="SecurePassword123!"
          
          echo "Deployment history:"
          liquibase history

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up AlloyDB Auth Proxy..."
          if [ -f proxy.pid ]; then
            kill $(cat proxy.pid) 2>/dev/null || echo "Proxy already stopped"
          fi
          echo "Final proxy logs:"
          cat proxy.log || echo "No proxy logs found"