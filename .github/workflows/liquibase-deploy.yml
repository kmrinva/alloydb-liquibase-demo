name: Liquibase â†’ AlloyDB via Auth Proxy (basic auth)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Build the instance URI if you didn't store ALLOYDB_INSTANCE_URI directly
      INSTANCE_URI: projects/${{ secrets.GCP_PROJECT_ID }}/locations/${{ secrets.ALLOYDB_REGION }}/clusters/${{ secrets.ALLOYDB_CLUSTER }}/instances/${{ secrets.ALLOYDB_INSTANCE }}
      JDBC_DB: ${{ secrets.ALLOYDB_DATABASE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (for Liquibase)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Install Liquibase CLI + PostgreSQL JDBC
        run: |
          LQ_VER=4.29.2
          curl -sSL -o liquibase.zip "https://github.com/liquibase/liquibase/releases/download/v${LQ_VER}/liquibase-${LQ_VER}.zip"
          unzip -q liquibase.zip -d "$HOME/liquibase"
          echo "$HOME/liquibase" >> "$GITHUB_PATH"
          curl -sSL -o "$HOME/postgresql.jar" "https://jdbc.postgresql.org/download/postgresql-42.7.4.jar"

      - name: Write Service Account key to disk
        # The proxy uses this to authenticate (you can also use ADC via google-github-actions/auth)
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > "$HOME/sa.json"
          chmod 600 "$HOME/sa.json"

      - name: Download AlloyDB Auth Proxy
        run: |
          PROXY_URL="https://storage.googleapis.com/alloydb-auth-proxy/v1.7.0/alloydb-auth-proxy.linux.amd64"
          curl -sSL "$PROXY_URL" -o "$HOME/alloydb-auth-proxy"
          chmod +x "$HOME/alloydb-auth-proxy"

      - name: Start AlloyDB Auth Proxy (background)
        env:
          # If you stored ALLOYDB_INSTANCE_URI directly, use that instead of $INSTANCE_URI
          TARGET_URI: ${{ secrets.ALLOYDB_INSTANCE_URI != '' && secrets.ALLOYDB_INSTANCE_URI || env.INSTANCE_URI }}
        run: |
          # Bind local port 5432 to the remote AlloyDB instance via the proxy
          "$HOME/alloydb-auth-proxy" \
            --credentials-file="$HOME/sa.json" \
            --port=5432 \
            "$TARGET_URI" &
          echo $! > proxy.pid

          # Wait for the proxy to be ready
          for i in {1..30}; do
            (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && echo "Proxy is up" && break
            sleep 1
          done

      - name: Liquibase validate
        env:
          JDBC_URL: "jdbc:postgresql://127.0.0.1:5432/${{ env.JDBC_DB }}?sslmode=disable"
        run: |
          liquibase \
            --classpath="$HOME/postgresql.jar" \
            --url="$JDBC_URL" \
            --username="${{ secrets.ALLOYDB_USER }}" \
            --password="${{ secrets.ALLOYDB_PASSWORD }}" \
            --changelog-file="changelog.xml" \
            validate

      - name: Liquibase update
        env:
          JDBC_URL: "jdbc:postgresql://127.0.0.1:5432/${{ env.JDBC_DB }}?sslmode=disable"
        run: |
          liquibase \
            --classpath="$HOME/postgresql.jar" \
            --url="$JDBC_URL" \
            --username="${{ secrets.DB_USER }}" \
            --password="${{ secrets.DB_PASSWORD }}" \
            --changelog-file="changelog.xml" \
            update

      - name: Stop proxy
        if: always()
        run: |
          if [ -f proxy.pid ]; then
            kill "$(cat proxy.pid)" || true
          fi
